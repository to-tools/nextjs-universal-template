---
description: 
globs: 
alwaysApply: false
---
# Next.js 通用模板系统

## 项目概述
这是一个功能完整的Next.js 15+通用模板项目，包含企业级应用所需的核心功能模块。

## 核心功能特性

### 🌍 国际化系统 (i18n)
- 支持5种语言：简体中文(默认)、英语、日语、韩语、法语
- URL路径语言映射 (`/zh/`, `/en/`, `/ja/`, `/ko/`, `/fr/`)
- TypeScript类型安全的翻译系统
- 服务端渲染 (SSR) 和客户端完整支持
- 字符串插值和复数处理

### 🎨 主题系统
- 浅色/深色主题切换
- 跟随系统主题自动切换
- CSS变量驱动的颜色系统
- 完整的Tailwind CSS集成
- 持久化用户偏好设置

### 📱 响应式设计
- 移动优先的设计理念
- 完整的跨设备兼容性
- 现代化UI组件库
- Tailwind CSS 4 最新特性

### ⚡ 性能优化
- Next.js 15 App Router架构
- Turbopack开发环境加速
- 自动代码分割和懒加载
- 静态生成和增量渲染 (ISR)

### 🚀 多平台部署
- Cloudflare Pages 优化配置
- Vercel 部署支持
- 静态资源优化
- SEO完整配置

## 页面结构

### 完整页面系统
- **首页** (`/[lang]/`) - 项目介绍和功能展示
- **关于页面** (`/[lang]/about`) - 项目详细说明和技术栈
- **隐私政策** (`/[lang]/privacy`) - 数据处理政策
- **服务条款** (`/[lang]/terms`) - 使用条款和限制

### 布局系统
- [`src/components/Header.tsx`](mdc:src/components/Header.tsx) - 导航栏，包含语言和主题切换
- [`src/components/Footer.tsx`](mdc:src/components/Footer.tsx) - 页脚，包含功能特性和技术信息
- [`src/app/[lang]/layout.tsx`](mdc:src/app/[lang]/layout.tsx) - 国际化布局容器

## 核心架构

### 文件结构
```
src/
├── app/                    # Next.js App Router
│   ├── [lang]/            # 国际化路由
│   ├── layout.tsx         # 根布局
│   ├── globals.css        # 全局样式
│   └── not-found.tsx      # 404页面
├── components/            # React组件
│   ├── i18n/              # 国际化组件
│   ├── theme/             # 主题切换组件
│   ├── Header.tsx         # 页面头部
│   └── Footer.tsx         # 页面底部
└── lib/                   # 核心库
    ├── i18n/              # 国际化系统
    └── themes/            # 主题系统
```

### 技术栈
- **框架**: Next.js 15.3.2 (App Router)
- **语言**: TypeScript 5
- **样式**: Tailwind CSS 4
- **构建**: Turbopack (开发)
- **部署**: Cloudflare Pages & Vercel

## 自定义指南

### 添加新页面
1. 在 `src/app/[lang]/` 目录下创建新页面
2. 在翻译文件中添加对应的文本内容
3. 更新导航菜单和网站地图

### 添加新语言
1. 在 [`src/lib/i18n/i18n-config.ts`](mdc:src/lib/i18n/i18n-config.ts) 中添加语言配置
2. 创建新的翻译文件 `src/lib/i18n/locales/{locale}.ts`
3. 更新中间件语言检测逻辑

### 自定义主题
1. 修改 [`src/lib/themes/theme-config.ts`](mdc:src/lib/themes/theme-config.ts) 中的颜色定义
2. 更新 [`src/app/globals.css`](mdc:src/app/globals.css) 中的CSS变量
3. 调整Tailwind配置以支持新的主题色

## 部署配置

### Cloudflare Pages
- 构建命令: `npm run build`
- 输出目录: `out`
- Node版本: 18+
- 环境变量配置通过Cloudflare控制台

### Vercel
- 自动检测Next.js项目
- 支持预览部署和生产部署
- 环境变量通过Vercel控制台配置

## 开发工作流

### 本地开发
```bash
npm run dev          # 启动开发服务器 (端口3001)
npm run build        # 构建生产版本
npm run preview      # Cloudflare本地预览
npm run deploy       # 部署到Cloudflare Pages
```

### 项目检查清单
- [ ] 更新项目名称和描述
- [ ] 自定义品牌颜色和样式
- [ ] 添加项目特定的内容
- [ ] 配置部署环境变量
- [ ] 设置自定义域名
- [ ] 测试所有语言版本
- [ ] 验证主题切换功能

## 开发原则

### 代码质量
- 严格的TypeScript类型检查
- 组件化设计思维
- 国际化优先开发
- 主题兼容性考虑

### 用户体验
- 快速的页面加载
- 无障碍性支持
- 响应式布局
- 直观的导航设计

### 可维护性
- 清晰的文件组织
- 一致的命名规范
- 完整的文档说明
- 模块化架构设计
